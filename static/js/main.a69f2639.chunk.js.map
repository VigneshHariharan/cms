{"version":3,"sources":["Components/Login/loginreducer.js","Components/Dashboard/dashboardReducer.js","Components/reduxManager.js","Components/Login/loginpage.js","Components/Dashboard/userDashboard.js","Components/Dashboard/Tables/Table.js","Components/Dashboard/complaintForm.js","Components/Dashboard/Dashboard.js","Components/Dashboard/technicianForm/form.js","Components/Dashboard/Tables/adminTable/Table.js","Components/Dashboard/Tables/adminTable/actionCreators.js","Components/Dashboard/adminDashboard.js","Components/Dashboard/Tables/technicianTable/Table.js","Components/Dashboard/technicianDashboard.js","Components/index.js","App.js","index.js"],"names":["loginInitialState","userLogin","username","localStorage","getItem","password","token","adminLogin","technicianLogin","loggedIn","users","admin","technicians","JSON","parse","complaintInitialState","form","block","floor","systemNumber","description","technician","completeStatus","assignStatus","assignedTechnician","sendBy","approvedStatus","complaints","rootReducer","combineReducers","login","state","action","type","setItem","payload","stringify","complaint","index","removeItem","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","passwordRegex","RegExp","LoginPage","props","handleChange","e","setState","target","name","value","handleKeyPress","key","passwordRef","current","focus","handleClick","length","test","map","usersLogin","wrongFormat","error","shouldLogin","shouldTechnicianLogin","handleSubmit","preventDefault","userRef","React","createRef","this","to","className","onSubmit","aria-hidden","ref","placeholder","onKeyPress","onChange","onClick","style","border","fontSize","width","Component","connect","dispatch","UserDashboard","id","technicianUsername","display","createdTime","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","ComplaintForm","handleSystemNumber","Number","isInteger","parseInt","isNaN","err","floorMap","floorView","blockValue","floorNo","descRef","setForm","formErr","systemRef","show","i","toString","step","marginLeft","marginRight","color","Date","Dashboard","handleComplaintform","handleLogout","logout","Form","lastnameRef","console","log","cpasswordRef","firstName","lastName","cPassword","setTechnician","submitFeedback","firstnameRef","bind","handleSumbit","required","Table","handleSelect","selectedOption","assignTechnician","handleButtonClick","approveStatus","disabled","tech","technicianName","AdminDashboard","handleTechnicianClick","visible","handleComplaintClick","handleLogoutClick","isCompleted","TechnicianDashboard","Home","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a69f2639.chunk.js","sourcesContent":["\r\n\r\nconst loginInitialState = {\r\n  userLogin: {\r\n    username: localStorage.getItem(\"usernameOfUser\"),\r\n    password: localStorage.getItem(\"passwordOfUser\"),\r\n    token: localStorage.getItem('userToken') ? localStorage.getItem(\"userToken\") : \"\",\r\n  },\r\n  adminLogin: {\r\n    username: localStorage.getItem(\"usernameOfAdmin\"),\r\n    password: localStorage.getItem(\"passwordOfAdmin\"),\r\n    token: localStorage.getItem('adminToken') ? localStorage.getItem(\"adminToken\") : \"\",\r\n  },\r\n  technicianLogin: {\r\n    username: localStorage.getItem(\"usernameOfTechnician\"),\r\n    password: localStorage.getItem(\"passwordOfTechnician\"),\r\n    token: localStorage.getItem('technicianToken') ? localStorage.getItem(\"technicianToken\") : \"\",\r\n  },\r\n  loggedIn: \"\",\r\n  users: [\r\n    {\r\n      username: \"vigneshph\",\r\n      password: \"Pass1strong\"\r\n    },\r\n    {\r\n      username: \"watercans\",\r\n      password: \"Regexp33\"\r\n    }\r\n  ],\r\n  admin: [{\r\n    username: \"adminiams\",\r\n    password: \"AdminPass1\"\r\n  }],\r\n  technicians: localStorage.getItem(\"technicians\") ? JSON.parse(localStorage.getItem(\"technicians\")) : []\r\n\r\n}\r\n\r\nexport const loginReducer = (state = loginInitialState, action) => {\r\n  switch (action.type) {\r\n    // Login checks in their respective storage login for users,admin,technicians\r\n    case \"LOGIN\":\r\n      localStorage.setItem('usernameOfUser', action.payload.username)\r\n      localStorage.setItem('passwordOfUser', action.payload.password)\r\n      localStorage.setItem(\"userToken\", \"loggedIn\")\r\n      localStorage.setItem(\"token\", 'loggedIn')\r\n      return {\r\n        ...state, userLogin: {\r\n          username: localStorage.getItem(\"usernameOfUser\"),\r\n          password: localStorage.getItem(\"passwordOfUser\"),\r\n          token: localStorage.getItem(\"userToken\"),\r\n        },\r\n        loggedIn: \"user\"\r\n      }\r\n\r\n    case \"ADMIN_LOGIN\":\r\n      localStorage.setItem('usernameOfAdmin', action.payload.username)\r\n      localStorage.setItem('passwordOfAdmin', action.payload.password)\r\n      localStorage.setItem(\"adminToken\", 'adminLoggedIn')\r\n      localStorage.setItem(\"token\", 'adminLoggedIn')\r\n      return {\r\n        ...state, adminLogin: {\r\n          username: localStorage.getItem(\"usernameOfAdmin\"),\r\n          password: localStorage.getItem(\"passwordOfAdmin\"),\r\n          token: localStorage.setItem(\"adminToken\", \"adminLoggedIn\"),\r\n        },\r\n        loggedIn: \"admin\"\r\n      }\r\n\r\n    case \"TECHNICIAN_LOGIN\":\r\n      localStorage.setItem('usernameOfTechnician', action.payload.username)\r\n      localStorage.setItem('passwordOfTechnician', action.payload.password)\r\n      localStorage.setItem(\"technicianToken\", 'technicianLoggedIn')\r\n      localStorage.setItem(\"token\", 'technicianLoggedIn')\r\n      return {\r\n        ...state,\r\n        technicianLogin: {\r\n          username: localStorage.getItem(\"usernameOfTechnician\"),\r\n          password: localStorage.getItem(\"passwordOfTechnician\"),\r\n          token: localStorage.setItem(\"technicianToken\", \"technicianLoggedIn\"),\r\n        }\r\n        , loggedIn: \"technician\"\r\n      }\r\n\r\n    // reducer to add new technicians\r\n    case \"ADD_TECHNICIAN\":\r\n      const technician = {\r\n        username: action.payload.username,\r\n        password: action.payload.password\r\n      }\r\n      localStorage.setItem(\"technicians\",\r\n        JSON.stringify([...state.technicians, technician]))\r\n      return {\r\n        ...state,\r\n        technicians: JSON.parse(localStorage.getItem(\"technicians\")),\r\n      }\r\n\r\n    default:\r\n      return { ...state, loggedIn: \"\" }\r\n  }\r\n}\r\n","\r\nconst complaintInitialState = {\r\n  form: {\r\n    block: \"\",\r\n    floor: \"\",\r\n    systemNumber: 0,\r\n    description: \"\",\r\n    technician: '',\r\n    completeStatus: 'In progress',\r\n    assignStatus: '',\r\n    assignedTechnician: '',\r\n    sendBy: '',\r\n    approvedStatus: 'not-approved'\r\n  },\r\n  //complaints not working\r\n  complaints: localStorage.getItem(\"complaints\"),\r\n}\r\n\r\n\r\nexport const complaintReducer = (state = complaintInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n\r\n      if (!localStorage.getItem(\"complaints\")) {\r\n        state.complaints = []\r\n      }\r\n      localStorage.setItem(\"complaints\", JSON.stringify([...state.complaints, action.payload]))\r\n      return { ...state, complaints: JSON.parse(localStorage.getItem(\"complaints\")) }\r\n\r\n    case 'ASSIGN_TECHNICIAN':\r\n      state.complaints[action.payload.index].technician = action.payload.technician\r\n      state.complaints[action.payload.index].assignedTechnician = action.payload.technician\r\n      localStorage.setItem(\"assign\", true)\r\n      state.complaints[action.payload.index].assignStatus = localStorage.getItem(\"assign\")\r\n      localStorage.setItem('complaints', JSON.stringify(state.complaints))\r\n      return {\r\n        ...state, complaints: JSON.parse(localStorage.getItem(\"complaints\"))\r\n      }\r\n\r\n    case 'COMPLETED_STATUS':\r\n      state.complaints[action.payload.index].completeStatus = 'Completed'\r\n      localStorage.setItem('complaints', JSON.stringify(state.complaints))\r\n      return {\r\n        ...state, complaints: JSON.parse(localStorage.getItem(\"complaints\"))\r\n      }\r\n\r\n    case \"USER_LOGOUT\":\r\n      localStorage.removeItem(\"usernameOfUser\")\r\n      localStorage.removeItem(\"passwordOfUser\")\r\n      localStorage.removeItem(\"userToken\")\r\n      return { ...state }\r\n\r\n    case \"TECHNICIAN_LOGOUT\":\r\n      localStorage.removeItem(\"usernameOfTechnician\")\r\n      localStorage.removeItem(\"passwordOfTechnician\")\r\n      localStorage.removeItem(\"technicianToken\")\r\n      return { ...state }\r\n\r\n    case \"ADMIN_LOGOUT\":\r\n      localStorage.removeItem(\"usernameOfAdmin\")\r\n      localStorage.removeItem(\"passwordOfAdmin\")\r\n      localStorage.removeItem(\"adminToken\")\r\n      return { ...state }\r\n\r\n    case 'APPROVED_STATUS':\r\n      state.complaints[action.payload.index].approvedStatus = 'Completed'\r\n      localStorage.setItem('complaints', JSON.stringify(state.complaints))\r\n      return {\r\n        ...state, complaints: JSON.parse(localStorage.getItem(\"complaints\"))\r\n      }\r\n\r\n    default:\r\n      if (!localStorage.getItem(\"complaints\")) {\r\n        return { ...state, complaints: [] }\r\n      }\r\n      return { ...state, complaints: JSON.parse(localStorage.getItem(\"complaints\")) }\r\n  }\r\n}\r\n","import { createStore, compose, combineReducers } from \"redux\"\r\nimport { loginReducer } from \"./Login/loginreducer\"\r\nimport { complaintReducer } from \"./Dashboard/dashboardReducer\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  complaint: complaintReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './style.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst passwordRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})');\r\n\r\nclass LoginPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\terror: '',\r\n\t\t\twrongFormat: ''\r\n\t\t};\r\n\t\tthis.userRef = React.createRef();\r\n\t\tthis.passwordRef = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!localStorage.getItem('token')) {\r\n\t\t\tthis.userRef.current.focus();\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\thandleKeyPress = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tthis.passwordRef.current.focus();\r\n\t\t}\r\n\t};\r\n\r\n\thandleClick = () => {\r\n\t\t// Username and Password submit\r\n\t\tconst { admin, adminLogin } = this.props;\r\n\t\tconst { username, password } = this.state;\r\n\t\t// admin map\r\n\t\tif (username.length > 8 && passwordRegex.test(password)) {\r\n\t\t\t//password check\r\n\t\t\t////password must contain one lowercase character,\r\n\t\t\t//one uppercase character,one number,length above 8\r\n\r\n\t\t\tadmin.map((admin) => {\r\n\t\t\t\tif (username === admin.username && password === admin.password) {\r\n\t\t\t\t\treturn adminLogin(username, password);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.usersLogin(username, password);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({ wrongFormat: 'Password should have 8 chars,1 upp case,1 low case,1 num', error: '' });\r\n\t\t}\r\n\t};\r\n\r\n\tusersLogin = (username, password) => {\r\n\t\tconst { users, shouldLogin } = this.props;\r\n\t\treturn users.map((users) => {\r\n\t\t\t// to check if username and password are in users list\r\n\t\t\tif (username === users.username && password === users.password) {\r\n\t\t\t\treturn shouldLogin(username, password);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.technicianLogin(username, password);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\ttechnicianLogin = (username, password) => {\r\n\t\tconst { technicians, shouldTechnicianLogin } = this.props;\r\n\t\treturn technicians.map((technicians) => {\r\n\t\t\tif (username === technicians.username && password === technicians.password) {\r\n\t\t\t\treturn shouldTechnicianLogin(username, password);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.setState({ error: 'Username or password is wrong', wrongFormat: '' });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst loggedIn = this.props.loggedIn;\r\n\t\tif (!loggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"formDiv\">\r\n\t\t\t\t\t<form className=\"formwidth\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<p className=\"login\">LOG IN</p>\r\n\t\t\t\t\t\t<div className=\"textboxDiv\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-user icon\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tref={this.userRef}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tclassName=\"textbox\"\r\n\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"textboxDiv textboxDiv1\">\r\n\t\t\t\t\t\t\t<i className=\"fa fa-lock icon\" />\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tref={this.passwordRef}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tclassName=\"textbox\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>{' '}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{this.state.error ? (\r\n\t\t\t\t\t\t\t<i className=\"fa fa-exclamation-triangle warning-icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t<p className=\"errorMsg\">{this.state.error}</p>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{this.state.wrongFormat ? (\r\n\t\t\t\t\t\t\t<i className=\"fa fa-exclamation-triangle warning-icon\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t<p className=\"errorMsg\">{this.state.wrongFormat}</p>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"textboxDiv1\">\r\n\t\t\t\t\t\t\t<button className=\"button\" onClick={this.handleClick} type=\"submit\">\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div style={{ border: '1px solid grey', fontSize: '16px', width: '100px' }}>\r\n\t\t\t\t\t\tusername: \"adminiams\", password: \"AdminPass1\", username: \"vigneshph\", password: \"Pass1strong\"\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (loggedIn === 'user') {\r\n\t\t\treturn <Redirect to=\"/dashboard\" />;\r\n\t\t} else if (loggedIn === 'admin') {\r\n\t\t\treturn <Redirect to=\"/admindashboard\" />;\r\n\t\t} else if (loggedIn === 'technician') {\r\n\t\t\treturn <Redirect to=\"/techniciandashboard\" />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.login.users,\r\n\t\tadmin: state.login.admin,\r\n\t\ttechnicians: state.login.technicians,\r\n\t\tloggedIn: state.login.loggedIn\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tshouldLogin: (username, password) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'LOGIN',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\tadminLogin: (username, password) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'ADMIN_LOGIN',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\tshouldTechnicianLogin: (username, password) =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'TECHNICIAN_LOGIN',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React from 'react'\r\nconst UserDashboard =(props)=>{\r\n    return (\r\n      <div>\r\n        <div id=\"dashboard\">\r\n          <h1 id=\"heading\">Dashboard</h1>\r\n          <button id=\"logout\" name=\"logout\" onClick={props.handleClick}>Logout</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default UserDashboard","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport \"./table.css\"\r\n\r\nconst Table =(props)=>{\r\n  \r\n    let complaints = localStorage.getItem(\"complaints\") ? props.complaints : []\r\n    return (\r\n      <table id=\"table\" style={{ width: '60%', display: 'inline' }}>\r\n        <thead>\r\n        <tr><th className=\"block\">Block</th>\r\n      <th>Floor</th>\r\n      <th>System Number</th>\r\n      <th>Description</th>\r\n      <th>Created Time</th>\r\n      <th>Status</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          {complaints ? complaints.map((state, index) => {\r\n            return state.sendBy!=='admin'?<tr key={index}><td className=\"block\">{state.block}</td>\r\n            <td>{state.floor}</td>\r\n            <td>{state.systemNumber}</td>\r\n            <td>{state.description}</td>\r\n            <td>{state.createdTime}</td>\r\n            <td>{state.approvedStatus==='Completed'?'completed':'in-progress'}</td>\r\n            </tr>:<tr className=\"hidden\" key={index} ><td></td></tr>\r\n          }) : \"\"\r\n          }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    complaints: state.complaint.complaints,\r\n    technicians: state.login.technicians,\r\n    technicianUsername: state.login.username\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport './Form.css'\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n// time\r\nlet formatAMPM = (date) => {\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  let ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0' + minutes : minutes; // for less than 10 minutes to add a zero upfront\r\n  let strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\nclass ComplaintForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      block: \"block-1\",\r\n      floorNo: [1, 2, 3, 4],\r\n      floor: \"floor-1\",\r\n      systemNumber: \"\",\r\n      description: \"\",\r\n      err: false,\r\n      formErr: \"\",\r\n    }\r\n    this.systemRef = React.createRef()\r\n    this.descRef = React.createRef()\r\n  }\r\n\r\n  handleSystemNumber=(e)=>{\r\n    if (e.target.name === \"systemNumber\") {\r\n      if (Number.isInteger(parseInt(e.target.value))) {\r\n        this.setState({ systemNumber: e.target.value })\r\n      }\r\n      else if (isNaN(parseInt(e.target.value))) {\r\n        return this.setState({ err: true })\r\n      }\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    // separate for floor and system number\r\n    if (e.target.name !== \"floor\" && e.target.name !== \"systemNumber\") {\r\n      this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    // for dynamic dropdown to FLOOR additional function\r\n    if (e.target.name === \"block\") {\r\n      // passing block value since setstate doesn't update soon\r\n      this.floorMap(e.target.value)\r\n      this.setState({ floorView: false })\r\n    }\r\n  }\r\n\r\n\r\n  floorMap = (blockValue) => {\r\n    switch (blockValue) {\r\n      // case \"block-1\":\r\n      //   return this.setState({ floorNo: 4 })\r\n      case \"block-2\":\r\n        return this.setState({ floorNo: [1, 2, 3, 4, 5] })\r\n      case \"block-3\":\r\n        return this.setState({ floorNo: [1, 2, 3, 4, 5, 6] })\r\n      case \"block-4\":\r\n        return this.setState({ floorNo: [1, 2, 3, 4, 5, 6, 7] })\r\n      default:\r\n        return this.setState({ floorNo: [1, 2, 3, 4] })\r\n    }\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && e.target.name === 'systemNumber') {\r\n      this.descRef.current.focus()\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const { block, floor, systemNumber, description } = this.state\r\n    if (parseInt(systemNumber) % 1 === 0 && this.state.description !== \"\") {\r\n\r\n      this.props.setForm(block, floor, systemNumber, description, this.props.sendBy)\r\n      this.setState({ err: false })\r\n\r\n      if (e.target.name === \"submit\") {\r\n        this.setState({ formErr: true })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ err: true })\r\n      this.setState({ systemNumber: \"\" })\r\n    }\r\n    this.setState({\r\n      block: \"block-1\",\r\n      floor: \"floor-1\",\r\n      systemNumber: \"\",\r\n      description: \"\",\r\n    })\r\n\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <form style={{ width: '30%', display: 'block' }}  className=\"container complaint-form\" onSubmit={this.handleSubmit}>\r\n        <button className=\"closeButton\" name=\"complaintform\" onClick={this.props.show}>&times;</button>\r\n        <h1 className=\"heading\">Complaint-Form</h1>\r\n        {/* Block */}\r\n        <label className=\"label\">Block : </label>&nbsp;\r\n          <select\r\n          name=\"block\"\r\n          id=\"myList\"\r\n          onChange={this.handleChange}\r\n        >\r\n          {/* <option></option> */}\r\n          <option>block-1</option>\r\n          <option>block-2</option>\r\n          <option>block-3</option>\r\n          <option>block-4</option>\r\n        </select><br></br>\r\n\r\n        {/* Floor */}\r\n        <label className=\"label\">Floor : </label>&nbsp;\r\n          <select\r\n          name=\"floor\"\r\n          onChange={this.handleChange}\r\n          id=\"myList\"\r\n        >\r\n          {/* <option></option> */}\r\n          {\r\n            this.state.floorNo ? this.state.floorNo.map((i) => {\r\n              return (<option key={(i * 100).toString()}>{`floor-${i}`}</option>)\r\n            }) : \"\"\r\n          }\r\n        </select><br></br>\r\n\r\n        {/* System Number */}\r\n        <label className=\"label\">System Number : </label>\r\n        <input\r\n          ref={this.systemRef}\r\n          onKeyPress={this.handleKeyPress}\r\n          name=\"systemNumber\"\r\n          type=\"number\"\r\n          onChange={this.handleSystemNumber}\r\n          step={1}\r\n          value={this.state.systemNumber}\r\n        ></input><br></br>\r\n\r\n        {/* Description */}\r\n        <label className=\"label\">Description :</label>\r\n        <textarea\r\n          ref={this.descRef}\r\n          name=\"description\"\r\n          onChange={this.handleChange}\r\n          value={this.state.description}\r\n        ></textarea> <br></br>\r\n        <button name=\"submit\" className=\"submit\" onClick={this.handleClick} type=\"submit\">Submit</button>\r\n        {this.state.err ? <p style={{ display: \"inline\", fontSize: \"16px\", marginLeft: \"80px\", marginRight: \"10px\" }}>Enter a number</p> : \"\"}\r\n        {this.state.formErr ? <p style={{ color: \"green\" }}>form submitted</p> : \"\"}\r\n\r\n      </form >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setForm: (block, floor, systemNumber, description, sendBy) => dispatch({\r\n      type: \"ADD_LIST\", payload: {\r\n        block, floor, systemNumber, description, sendBy, createdTime: formatAMPM(new Date()), technician: ''\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ComplaintForm)","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport UserDashboard from \"./userDashboard\"\r\nimport Table from \"./Tables/Table\"\r\nimport ComplaintForm from \"./complaintForm\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./dashboard.css\"\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      token: localStorage.getItem(\"userToken\") ? localStorage.getItem(\"userToken\") : \"\",\r\n      show: false\r\n    }\r\n  }\r\n  handleComplaintform=(e)=>{\r\n    this.setState({ show: !this.state.show })\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n      this.props.logout()\r\n      this.setState({ token: localStorage.getItem(\"userToken\") })\r\n    }\r\n  render() {\r\n    if (this.state.token) {\r\n      return (\r\n        <div>\r\n          <UserDashboard handleClick={this.handleLogout} token={this.state.token} />\r\n          <button id=\"Add-a-Complaint\" name=\"complaintform\" onClick={this.handleComplaintform}>Add a Complaint</button>\r\n          <br />\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n            <Table></Table>\r\n\r\n            {/* Complaint form only shows when \"add a complaint\" button is pressed\r\n            ..................and add complaints to the table file.\r\n         */}\r\n\r\n            {\r\n              this.state.show ? <ComplaintForm show={this.handleComplaintform} sendBy=\"user\" /> : \"\"\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else\r\n      return <Redirect to=\"/\" ></Redirect>\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch({ type: \"USER_LOGOUT\" })\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Dashboard)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Form.css'\r\nconst passwordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\r\n\r\nclass Form extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            cPassword: '',\r\n            submitFeedback:'Enter the above details to sumbit the form!'\r\n        }\r\n        this.firstnameRef = React.createRef()\r\n        this.lastnameRef = React.createRef()\r\n        this.passwordRef = React.createRef()\r\n        this.cpasswordRef = React.createRef()\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSumbit = this.handleSumbit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        this.firstnameRef.current.focus()\r\n    }\r\n    handleSumbit(e) {\r\n        e.preventDefault()\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    handleKeyPress = (e) => {\r\n\r\n        if (e.key === 'Enter') {\r\n            if (e.target.name === 'firstName') {\r\n                this.lastnameRef.current.focus()\r\n            }\r\n            else if (e.target.name === 'lastName') {\r\n                this.passwordRef.current.focus()\r\n            }\r\n            else if (e.target.name === 'password') {\r\n                console.log(\"passssss\")\r\n                this.cpasswordRef.current.focus()\r\n            }\r\n        }\r\n\r\n    }\r\n    handleClick = () => {\r\n        const { firstName, lastName, password, cPassword } = this.state;\r\n        const username = `${firstName} ${lastName}`\r\n        if (username.length > 8 && passwordRegex.test(password) && password === cPassword) {\r\n            this.props.setTechnician(username, password)\r\n            this.setState({\r\n                firstName: '',\r\n                lastName: '',\r\n                password: '',\r\n                cPassword: '',\r\n                submitFeedback:'Successfully submitted'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<div className=\"technician\" style={{ width: '30%', display: 'inline' }}>\r\n            <button className=\"closeButton\" name=\"form\" onClick={this.props.show}>&times;</button>\r\n\r\n               <form className=\"form\" onSubmit={this.handleSumbit}>\r\n                <h1 className=\"heading\">Technician Details</h1>\r\n                \r\n                <div className=\"container\">\r\n                    <label className=\"label\">First Name<span className=\"asterick\">*</span></label>\r\n                    <input className=\"technician-form\" ref={this.firstnameRef} type=\"text\" name=\"firstName\" required value={this.state.firstName} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\r\n                    <br />\r\n                    <label className=\"label\"> Last Name<span className=\"asterick\">*</span></label>\r\n                    <input className=\"technician-form\" ref={this.lastnameRef} type=\"text\" name=\"lastName\" required value={this.state.lastName} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\r\n                    <br />\r\n                    <label className=\"label\"> Password<span className=\"asterick\">*</span></label>\r\n                    <input className=\"technician-form\" ref={this.passwordRef} type=\"password\" name=\"password\" required value={this.state.password} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\r\n                    <br />\r\n                    <label className=\"label\"> Confirm Password <span className=\"asterick\">*</span></label>\r\n                    <input className=\"technician-form\" ref={this.cpasswordRef} type=\"password\" name=\"cPassword\" required value={this.state.cPassword} onChange={this.handleChange} />\r\n                    <br />\r\n                   {this.state.submitFeedback!=='Successfully submitted'?<label className=\"label\" style={{display:'inline'}}>Enter the above details to sumbit the form!</label >:<label  style={{color:\"green\"}}>Succesfully submitted!</label>}\r\n                    <button className=\"submit\" type=\"submit\" onClick={this.handleClick}>submit</button>\r\n                    \r\n                </div>\r\n                \r\n              </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTechnician: (username, password) => dispatch({\r\n            type: 'ADD_TECHNICIAN',\r\n            payload: { username, password }\r\n        })\r\n\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Form)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport \"../table.css\"\r\nimport { assignTechnician, approveStatus } from \"./actionCreators\"\r\n\r\nclass Table extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      selectedOption: localStorage.getItem('technicians') ? JSON.parse(localStorage.getItem('technicians'))[0].username : '',\r\n    }\r\n  }\r\n\r\n  handleSelect = (e) => {\r\n    this.setState({ selectedOption: e.target.value })\r\n  }\r\n\r\n  handleClick = (index) => {\r\n    this.props.assignTechnician(this.state.selectedOption, index)\r\n  }\r\n  handleButtonClick = (index) => {\r\n    this.props.approveStatus(index)\r\n  }\r\n\r\n  render() {\r\n\r\n    const technicians = localStorage.getItem(\"technicians\") ? this.props.technicians : []\r\n    let complaints = localStorage.getItem(\"complaints\") ? this.props.complaints : []\r\n    return (\r\n      <table id=\"table\" style={{ width: '60%', display: 'inline' }}>\r\n        <thead>\r\n          <tr><th className=\"block\">Block</th>\r\n            <th>Floor</th>\r\n            <th>System Number</th>\r\n            <th>Description</th>\r\n            <th>Created Time</th>\r\n            <th className=\"assign-function\">Assign Function</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {complaints ? complaints.map((state, index) => {\r\n            return <tr key={(index * 2000).toString()}><td className=\"block\">{state.block}</td>\r\n              <td>{state.floor}</td>\r\n              <td>{state.systemNumber}</td>\r\n              <td>{state.description}</td>\r\n              <td>{state.createdTime}</td>\r\n              <td><select value={state.assignedTechnician} disabled={state.assignStatus ? true : \"\"}\r\n                onChange={this.handleSelect}><option>--select any one--</option>\r\n                {\r\n                  technicians.map((tech, i) => {\r\n                    return (\r\n                      <option key={(i * 1000).toString()}>{tech.username}</option>\r\n                    )\r\n                  })\r\n                }</select>\r\n                <button onClick={() => this.handleClick(index)}\r\n                  disabled={state.assignStatus ? true : \"\"}>Assign</button></td>\r\n              <td>{state.completeStatus ? 'completed' : 'in-progress'}\r\n                <button onClick={() => this.handleButtonClick(index)}\r\n                  disabled={state.approvedStatus === state.completeStatus ? true : false}>\r\n                  {state.approvedStatus === \"Completed\" ? \"Approved\" : 'Approve'}</button></td>\r\n            </tr>\r\n          }) : \"\"\r\n          }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    complaints: state.complaint.complaints,\r\n    technicians: state.login.technicians,\r\n    technicianUsername: state.login.username\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    assignTechnician: (technicianName, index) => dispatch(assignTechnician(technicianName, index)),\r\n    approveStatus: (index) => dispatch(approveStatus(index))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table)\r\n","export const assignTechnician = (technicianName, index) => {\r\n  return {\r\n    type: 'ASSIGN_TECHNICIAN',\r\n    payload: { technician: technicianName, index }\r\n  }\r\n}\r\n\r\nexport const approveStatus = (index) => {\r\n  return {\r\n    type: 'APPROVED_STATUS',\r\n    payload: { index }\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport Form from './technicianForm/form'\r\nimport UserDashboard from \"./userDashboard\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport \"./dashboard.css\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport ComplaintForm from \"./complaintForm\"\r\nimport Table from \"./Tables/adminTable/Table\"\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      token: localStorage.getItem(\"adminToken\"),\r\n      visible: false,\r\n      show: false\r\n    }\r\n  }\r\n\r\n  handleTechnicianClick = () => {\r\n      this.setState({ visible: !this.state.visible, show: false })\r\n    }\r\n  handleComplaintClick=()=>{\r\n      this.setState({ show: !this.state.show, visible: false })\r\n    }\r\n  handleLogoutClick=()=>{\r\n      this.props.logout()\r\n      this.setState({ token: localStorage.getItem(\"adminToken\") })\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    if (localStorage.getItem(\"adminToken\"))\r\n      return (\r\n        <div>\r\n          <UserDashboard handleClick={this.handleLogoutClick} token={this.state.token} />\r\n          <button id=\"Add-a-Technican\" name=\"form\" onClick={this.handleTechnicianClick}>Add a Technician</button>\r\n          <button id=\"Add-a-Complaint\" name=\"complaintform\" onClick={this.handleComplaintClick}>Add a Complaint</button>\r\n          <br /><br />\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n\r\n            <Table></Table>\r\n            {\r\n              this.state.visible ? <Form className=\"technicianform\" show={this.handleTechnicianClick} /> : \"\"\r\n            }\r\n            {\r\n              this.state.show ? <ComplaintForm show={this.handleComplaintClick} sendBy=\"admin\" /> : \"\"\r\n            }\r\n\r\n            {/* Complaint form only shows when \"add a complaint\" button is pressed\r\n            ..................and add complaints to the table file.\r\n         */}\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    else\r\n      return <Redirect to=\"/\"></Redirect>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch({ type: \"ADMIN_LOGOUT\" })\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminDashboard)","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../table.css\"\r\n\r\nconst Table = (props) => {\r\n  let complaints = localStorage.getItem(\"complaints\") ? props.complaints : [];\r\n  return (\r\n\r\n    <table id=\"table\" style={{ width: '60%', display: 'inline' }}>\r\n      <thead>\r\n        <tr><th className=\"block\">Block</th>\r\n          <th>Floor</th>\r\n          <th>System Number</th>\r\n          <th>Description</th>\r\n          <th>Created Time</th>\r\n          <th className=\"status\">Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {complaints ? complaints.map((state, index) => {\r\n          const completeStatus = JSON.parse(localStorage.getItem('complaints'))[index].completeStatus === 'Completed'\r\n          const approvedStatus = JSON.parse(localStorage.getItem('complaints'))[index].approvedStatus === 'Completed'\r\n          return (props.technicianUsername === state.technician ?\r\n            <tr key={(index * 1001).toString()}>\r\n              <td className=\"block\">{state.block}</td>\r\n              <td>{state.floor}</td>\r\n              <td>{state.systemNumber}</td>\r\n              <td>{state.description}</td>\r\n              <td>{state.createdTime}</td>\r\n              <td className=\"status\">\r\n                <button disabled={completeStatus}\r\n                  onClick={() => props.isCompleted(index)}>\r\n                  Completed</button>{approvedStatus ? \"approved\" : completeStatus ? 'Completed' : 'in-progress'}</td>\r\n            </tr>\r\n            : <tr key={((index + 1) * 8000).toString()}></tr>)\r\n        }) : \"\"\r\n        }\r\n      </tbody>\r\n    </table>)\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    complaints: state.complaint.complaints,\r\n    technicians: state.login.technicians,\r\n    technicianUsername: state.login.technicianLogin.username\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    isCompleted: (index) => dispatch({\r\n      type: 'COMPLETED_STATUS',\r\n      payload: { index: index }\r\n    })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table)\r\n","import React, { Component } from 'react'\r\nimport UserDashboard from \"./userDashboard\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport \"./dashboard.css\"\r\nimport { connect } from \"react-redux\"\r\nimport Table from \"./Tables/technicianTable/Table\"\r\n\r\n\r\n\r\nclass TechnicianDashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      token: localStorage.getItem(\"technicianToken\") ? localStorage.getItem(\"technicianToken\") : \"\"\r\n    }\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n      this.props.logout()\r\n      this.setState({ token: localStorage.getItem(\"technicianToken\") })\r\n    }\r\n\r\n  render() {\r\n    if (this.state.token)\r\n      return (<div>\r\n        <UserDashboard handleClick={this.handleLogout} token={this.state.token} />\r\n        <br/>\r\n        <Table></Table>\r\n      </div>\r\n      )\r\n    else\r\n      return <Redirect to=\"/\"></Redirect>\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch({ type: \"TECHNICIAN_LOGOUT\" })\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(TechnicianDashboard)","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./reduxManager\"\r\n\r\nimport LoginPage from \"./Login/loginpage\"\r\nimport Dashboard from \"./Dashboard/Dashboard\"\r\nimport AdminDashboard from \"./Dashboard/adminDashboard\"\r\nimport TechnicianDashboard from \"./Dashboard/technicianDashboard\"\r\nimport ComplaintForm from \"./Dashboard/complaintForm\"\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Provider store={store}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={LoginPage}></Route>\r\n              <Route exact path=\"/dashboard/\" component={Dashboard} />\r\n              <Route exact path=\"/admindashboard/\" component={AdminDashboard} />\r\n              <Route exact path=\"/techniciandashboard/\" component={TechnicianDashboard} />\r\n              <Route exact path=\"/dashboard/complaintform/\" component={ComplaintForm} />\r\n              <Route exact path=\"/admindashboard/complaintform/\" component={ComplaintForm} />\r\n              <Route exact path=\"*\" component={() => <h1>Different Page</h1>} />\r\n            </Switch>\r\n          </Provider>\r\n        </Router>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Home from \"./Components\"\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}